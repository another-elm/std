/*

import Time exposing (customZone, Name)
import Elm.Kernel.List exposing (Nil)
import Platform.Unstable.Task as RawTask exposing (execImpure)
import Elm.Kernel.Utils exposing (Tuple0)

*/

function _Time_rawNow() {
  return Date.now();
}

const _Time_setInterval = (interval) => (onEffects) =>
  setInterval(() => {
    const now = _Time_rawNow();
    onEffects(now);
  }, interval - (_Time_rawNow() % interval));

const _Time_clearInterval = (key) => {
  clearInterval(key);
  return __Utils_Tuple0;
};

// TODO(harry): make this an impure function rather than a task.
function _Time_here() {
  return __RawTask_execImpure(() =>
    A2(__Time_customZone, -new Date().getTimezoneOffset(), __List_Nil)
  );
}

function _Time_getZoneName() {
  return __RawTask_execImpure(() => __Time_Name(Intl.DateTimeFormat().resolvedOptions().timeZone));
}

/* ESLINT GLOBAL VARIABLES
 *
 * Do not edit below this line as it is generated by tests/generate-globals.py
 */

/* eslint no-unused-vars: ["error", { "varsIgnorePattern": "_Time_.*" }] */

/* global __Time_customZone, __Time_Name */
/* global __List_Nil */
/* global __RawTask_execImpure */
/* global __Utils_Tuple0 */
